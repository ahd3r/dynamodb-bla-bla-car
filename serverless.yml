service: blablacar

frameworkVersion: '3'

package:
  individually: true
  excludeDevDependencies: true

plugins:
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: true

provider:
  name: aws
  region: us-east-1
  runtime: nodejs16.x
  memorySize: 512
  timeout: 10 # 10 sec
  logRetentionInDays: 14
  architecture: arm64
  versionFunctions: false
  stage: prod
  environment:
    SECRET: secret-test-test-test
    TOKEN: token-test-test-test
    TABLE_NAME: ${self:service}-table

functions:
  createRide:
    handler: src/index.createRide
    role: lambdaRole8
    events:
      - httpApi:
          path: /ride
          method: post

resources:
  Resources:
    lambdaRole8:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: lambdaRole8
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: lambdaPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'dynamodb:*'
                    - 'logs:*'
                  Resource: '*'
    lambdaTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: entity
            AttributeType: S
          - AttributeName: id
            AttributeType: S
          - AttributeName: created
            AttributeType: N
          - AttributeName: email
            AttributeType: S
          - AttributeName: to
            AttributeType: S
          - AttributeName: from
            AttributeType: S
          - AttributeName: adminId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: entity
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: CreatedIndex
            KeySchema:
              - AttributeName: entity
                KeyType: HASH
              - AttributeName: created
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
        LocalSecondaryIndexes:
          - IndexName: UserAndAdminEmailIndex
            KeySchema:
              - AttributeName: entity
                KeyType: HASH
              - AttributeName: email
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
          - IndexName: RideToIndex
            KeySchema:
              - AttributeName: entity
                KeyType: HASH
              - AttributeName: to
                KeyType: RANGE
            Projection:
                ProjectionType: 'ALL'
          - IndexName: RideFromIndex
            KeySchema:
              - AttributeName: entity
                KeyType: HASH
              - AttributeName: from
                KeyType: RANGE
            Projection:
                ProjectionType: 'ALL'
          - IndexName: AdminChatIndex
            KeySchema:
              - AttributeName: entity
                KeyType: HASH
              - AttributeName: adminId
                KeyType: RANGE
            Projection:
                ProjectionType: 'ALL'
        TableName: ${self:service}-table
